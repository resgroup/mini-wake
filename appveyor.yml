image:
  - Ubuntu

environment:
  pypi-token:
    secure: ysv4opRvqiJ4cKX7VBun/Kcunr+ltCylSP0z5X/+1AQqNgghRx7DHw64uxm9gXdWERToF6JtFaRIXf/Kg6F+uA46wT7WxRenjTrd/j5dsW/D/mjMaq8PTP+lHcz7tsaAM2wIO8kphvUqNcSnfkscTVKqtpm2GXEy5f0dQmDOWqf03mXPad3WhwfLsI49mjozD/3TWhZCS0MXbu8Tmt0xwRZJEKuiorTb7Bgfo2+ICI0+5OwOgCGjjEvjKUQfnsdqNrFDSzjKsz7jiL/9oimogQ==
  MINICONDA: C:\Miniconda3

install:
  # Get Miniconda and make it the main Python interpreter
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
  - bash ~/miniconda.sh -b -p ~/miniconda 
  - rm ~/miniconda.sh
  - export PATH=~/miniconda/bin:$PATH
  - conda env create -f environment.yml
  - source activate mini-wake
  - pip install codecov
  - pip install --user --upgrade setuptools wheel
  - pip install --user --upgrade twine

build_script:
  - python setup.py sdist bdist_wheel

test_script:
  - pytest --cov=./

on_finish:
  - codecov
  - cat coverage.xml
  - sh: |
      find "$APPVEYOR_BUILD_FOLDER" -type f -name 'test-output.xml' -print0 | xargs -0 -I '{}' curl -F 'file=@{}' "https://ci.appveyor.com/api/testresults/junit/$APPVEYOR_JOB_ID"

artifacts:
  - path: dist\*.*
    name: python-package

deploy: off

notifications:
  - provider: Email
    to:
      - '{{commitAuthorEmail}}'
    subject: 'Build {{status}}'
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: false

for:
-
  branches:
    only:
      - master

  deploy_script:
    - python -m twine upload -u __token__ -p ${Env:pypi-token} --repository-url https://test.pypi.org/legacy/ --skip-existing dist/*

